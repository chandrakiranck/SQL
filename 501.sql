# DAY 1
create database INCLASS;
use INCLASS;

create table EMPLOYEE(
	EMP_ID INTEGER(5),
    DEPT_ID INTEGER(3),
    MGR_ID INTEGER(5),
    F_NAME VARCHAR(20),
    L_NAME VARCHAR(20),
    EMAIL VARCHAR(45),
    PH_NUM INTEGER(10),
    SALARY INTEGER(6),
    CONSTRAINT PK_EMP PRIMARY KEY(EMP_ID)
);
    
SHOW TABLES;
DESC EMPLOYEE;

INSERT INTO EMPLOYEE VALUES(100, 90, 101, 'EDWIN', 'DANY', 'a@gm', 958585858, 10000);
INSERT INTO EMPLOYEE VALUES(101, 90, 109, 'HARRY', 'POTTER', 'b@gm', 747474747, 20000);
INSERT INTO EMPLOYEE VALUES(102, 60, 101, 'EVA', 'MATE', 'c@gm', 646464646, 9000);

SELECT * FROM employee;

SELECT EMP_ID, F_NAME, L_NAME FROM EMPLOYEE;

SELECT F_NAME, L_NAME, DEPT_ID, SALARY FROM EMPLOYEE WHERE SALARY > 10000;

SELECT F_NAME, L_NAME, EMAIL, SALARY, MGR_ID FROM EMPLOYEE WHERE MGR_ID IN (120,101,145);

SELECT F_NAME, L_NAME, DEPT_ID, SALARY FROM EMPLOYEE WHERE SALARY>8000 AND MGR_ID IN (120,101,145);

CREATE TABLE PRODUCT(
PROD_ID INTEGER(4),
PROD_CODE VARCHAR(3),
PNAME VARCHAR(20),
QUANTITY INTEGER(6),
PRICE FLOAT,
CONSTRAINT PK_PROD PRIMARY KEY(PROD_ID)
);

INSERT INTO PRODUCT VALUES(1001, 'PEN', 'Pen Red', 5000, 1.23);
INSERT INTO PRODUCT VALUES(1002, 'PEN', 'Pen Blue', 8000, 1.25);
INSERT INTO PRODUCT VALUES(1003, 'PEN', 'Pen Black', 2000, 1.25);
INSERT INTO PRODUCT VALUES(1004, 'PEC', 'Pencil 2B', 10000, 0.48);
INSERT INTO PRODUCT VALUES(1005, 'PEC', 'Pencil 2H', 8000, 0.49);

SELECT * FROM PRODUCT;

SELECT * FROM PRODUCT WHERE PROD_CODE IN ('PEN', 'PEC') AND QUANTITY <= 10000 AND QUANTITY >= 3000;

SELECT * FROM PRODUCT WHERE QUANTITY > 5000;

SELECT * FROM PRODUCT ORDER BY PRICE DESC;

CREATE TABLE COUNTRY(
COUNTRY_ID VARCHAR(2),
C_NAME VARCHAR(20),
REGION_ID INT,
POPULATION INT,
REVENUE FLOAT,
CONSTRAINT PK_COUNTRY PRIMARY KEY(COUNTRY_ID)
);

INSERT INTO COUNTRY VALUES('AR', 'Argentina', 2, 10000, 10000000.00);
INSERT INTO COUNTRY VALUES('NL', 'Netherlands', 1, 15000, 10000000.00);
INSERT INTO COUNTRY VALUES('AU', 'Australia', 3, 12000, 800000.00);
INSERT INTO COUNTRY VALUES('BE', 'Belgium', 1, 23000, 3000000.00);
INSERT INTO COUNTRY VALUES('BR', 'Brazil', 2, 11300, 2000000.00);
INSERT INTO COUNTRY VALUES('CA', 'Canada', 2, 16500, 4600000.00);
INSERT INTO COUNTRY VALUES('CH', 'Switzerland', 1, 30000, 2100000.00);
INSERT INTO COUNTRY VALUES('CN', 'China', 3, 40000, 1300000.00);
INSERT INTO COUNTRY VALUES('DE', 'Germany', 1, 35000, 1200000.00);

SELECT * FROM COUNTRY WHERE REVENUE <= 1000000 AND REGION_ID = 2;

SELECT * FROM COUNTRY WHERE POPULATION > 10000 AND REVENUE < 1500000 ORDER BY POPULATION;

# DAY 2
DESC EMPLOYEE;
SELECT * FROM EMPLOYEE;

# add column(s)
ALTER TABLE EMPLOYEE ADD(JOB VARCHAR(20), GENDER VARCHAR(2));

# drop column(s)
ALTER TABLE EMPLOYEE DROP EMAIL;
ALTER TABLE EMPLOYEE DROP JOB, DROP GENDER;

# modify variable type of column
ALTER TABLE EMPLOYEE MODIFY F_NAME VARCHAR(10);
ALTER TABLE EMPLOYEE MODIFY F_NAME VARCHAR(3); # ERROR: Existing data violates given condition

# add constraint
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMP FOREIGN KEY (MGR_ID) REFERENCES EMPLOYEE(EMP_ID); 
# ERROR: MGR_ID=109 has no corresponding row in EMPLOYEE table and hence violates foreign key constraint

INSERT INTO EMPLOYEE VALUES(109, 90, 101, 'JOHN','T',565656565,13000);
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMP FOREIGN KEY (MGR_ID) REFERENCES EMPLOYEE(EMP_ID); 

ALTER TABLE EMPLOYEE DROP PRIMARY KEY; # ERROR: Primary Key need for foreign key constraint

ALTER TABLE EMPLOYEE DROP FOREIGN KEY FK_EMP;
ALTER TABLE EMPLOYEE DROP PRIMARY KEY;
ALTER TABLE EMPLOYEE ADD PRIMARY KEY(EMP_ID);

# delete rows
DELETE FROM EMPLOYEE WHERE EMP_ID=102;

# update values
UPDATE EMPLOYEE SET F_NAME='JAMES', PH_NUM =11111 WHERE EMP_ID=101;

# arithmetic operatos - +,-,*,/
SELECT SALARY+1000 FROM EMPLOYEE;
SELECT SALARY+1000 AS NEW_SALARY FROM EMPLOYEE;
SELECT SALARY+1000 "New_Salary" FROM EMPLOYEE;

# BETWEEN operator
SELECT F_NAME, SALARY FROM EMPLOYEE WHERE SALARY BETWEEN 12000 AND 20000;

SELECT * FROM EMPLOYEE;

use orders;
show tables;
desc address;
desc carton;
desc online_customer;
desc order_header;
desc order_items;
desc product;
desc product_class;
desc shipper;